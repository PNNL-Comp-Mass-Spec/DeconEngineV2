// Written by Navdeep Jaitly for the Department of Energy (PNNL, Richland, WA)
// Copyright 2006, Battelle Memorial Institute
// E-mail: navdeep.jaitly@pnl.gov
// Website: http://ncrr.pnl.gov/software
// -------------------------------------------------------------------------------
// 
// Licensed under the Apache License, Version 2.0; you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at 
// http://www.apache.org/licenses/LICENSE-2.0

#pragma once
#include <ostream> 
namespace Engine
{
	namespace PeakProcessing
	{


		//! This class stores intermediate information about the peaks that is used in the processing pipeline.
		/*! 
			Peak information is stored in this class and is used in the processing. The information about mz, 
			intensity, data_index, peak_index is generated by PeakProcessor class using PeakProcessor::DiscoverPeaks. 
			SN, and FWHM are generated by these functions using PeakProcessor::PeakStatistician::FindFWHM, PeakProcessor::PeakStatistician::FindSignal
		*/
		class Peak
		{
		public:
			//! mz of the peak.
			double mdbl_mz ; 
			//!  intensity of peak.
			double mdbl_intensity ;
			//! Signal to noise ratio
			double mdbl_SN ; 
			//! index in PeakData::mvect_peak_tops std::vector. 
			int mint_peak_index ;
			//! index in mzs, intensity vectors that were used to create the peaks in PeakProcessor::DiscoverPeaks.
			int mint_data_index ;
			//! Full width at half maximum for peak.
			double mdbl_FWHM ;

			//! Default constructor.
			Peak(void);
			//! Copy constructor
			Peak(const Peak &a);
			//! Assignment operator
			/*!
				\param a Peak we want to assign to this Peak.
			*/
			Peak& operator=(const Peak &a);
			//! Sets the members of the Peak.
			/*!
				\param mz m/z of the peak.
				\param intensite intensity of the peak
				\param signal2noise signal2noise of the peak look at PeakProcessor::PeakStatistician::FindSignalToNoise
				\param peak_idx index of the peak in PeakData::mvect_peak_tops std::vector of the PeakData instance that was used to generate these peaks.
				\param data_idx index of the peak top in the mz, intensity vectors that are the raw data input into PeakData::DiscoverPeaks
				\param fwhm full width half max of the peak. For details about how this is calculated look at PeakProcessor::PeakStatistician::FindFWHM.
			*/
			void Set(double mz, double intensity, double signal2noise, int peak_idx, int data_idx, double fwhm);
			~Peak(void) ; 
		};

		//! Function used to sort peaks in a descending order. 
		bool PeakIntensityComparison(Peak &pk1, Peak &pk2) ; 
		std::ostream& operator<<(std::ostream &out, const Peak &a) ; 
	}

}